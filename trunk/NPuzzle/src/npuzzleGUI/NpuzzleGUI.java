/*
 * NpuzzleGUI.java
 *
 * Created on 20 de agosto de 2010, 10:33 PM
 */

package npuzzleGUI;

/**
 *
 * @author  Administrador
 */

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.CropImageFilter;
import java.awt.image.FilteredImageSource;
import java.awt.Graphics;



import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class NpuzzleGUI extends javax.swing.JFrame {
    private JPanel panel;
    private JLabel label;
    private ImagePanel hole;
    private Image source;
    private Image blank;
    //private Image image;
    private int dimension;
    private boolean leftOut;
    private boolean cuadricula;
    //private JPanel panelCentral;
    int[][] pos;
    int width, height;
    int cuadro;
    /** Creates new form NpuzzleGUI */
    public NpuzzleGUI() { 
        initComponents();        
        //panelCentral.setLayout(new GridLayout(3, 3));
        //panelCentral = new JPanel();
        dimension = getDimension();
        pos = new int[3][3];
        for (int i = 0; i<dimension*dimension; i++){
            pos[i/dimension][i%dimension]=i;
        }

        try {
            ImageIcon sh = new ImageIcon(NpuzzleGUI.class.getResource("Square.jpg"));
            ImageIcon bl = new ImageIcon(NpuzzleGUI.class.getResource("Blank.jpg"));
            blank = bl.getImage();
            source = sh.getImage();
            width = 575;//sid.getIconWidth();
            height = 575;//sid.getIconHeight();
            cuadro = width/dimension;
            leftOut = (width%dimension)>3;
            cuadricula = getCuadricula();
        } catch(Exception e){
            System.out.println(e.getMessage());
        }



        //add(Box.createRigidArea(new Dimension(0, 5)), BorderLayout.NORTH);    
        //(panelCentral, BorderLayout.CENTER);

        for ( int i = 0; i < dimension; i++) {
            for ( int j = 0; j < dimension; j++) {
                if ( j == dimension-1 && i == dimension-1) {
                    label = new JLabel("");
                    //panelCentral.add(label);
                    hole = new ImagePanel(j, i, dimension);
                    panelCentral.add(hole);
                    this.panelCentral.validate();
                } else {
                    //button = new JButton();
                    panel = new ImagePanel(j, i, dimension);
                    //button.addActionListener(this);
                    //panelCentral.add(button);
                    panelCentral.add(panel);
                    //image = createImage(new FilteredImageSource(source.getSource(), new CropImageFilter(j*width/3, i*height/3, (width/3), height/3)));
                    //button.setIcon(new ImageIcon(image));
                    
                    
                }
            }
        }
        for (java.awt.Component pan : this.panelCentral.getComponents()) {
            pan.validate();
            pan.repaint();
        }

        new Thread(new Runnable() {
                public void run() {
                    try{
                        Thread.currentThread().sleep(200);
                    } catch(Exception e){
                        System.out.println(e.getMessage());
                    }
                    panelCentral.repaint();
                }
        }).start();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barPestanas = new javax.swing.JTabbedPane();
        tablero = new javax.swing.JPanel();
        panelCentral = new javax.swing.JPanel();
        barBtnes = new javax.swing.JPanel();
        BtnNuevo = new javax.swing.JButton();
        BtnResolver = new javax.swing.JButton();
        BtnAnterior = new javax.swing.JButton();
        BtnSgte = new javax.swing.JButton();
        BtnVistaPrevia = new javax.swing.JButton();
        configuracion = new javax.swing.JPanel();
        jTextDimension = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jCheckCuadricula = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(590, 650));
        setResizable(false);

        barPestanas.setMinimumSize(new java.awt.Dimension(580, 44));
        barPestanas.setPreferredSize(new java.awt.Dimension(577, 677));

        tablero.setDoubleBuffered(false);

        panelCentral.setMinimumSize(new java.awt.Dimension(560, 100));
        panelCentral.setPreferredSize(new java.awt.Dimension(575, 575));
        panelCentral.setRequestFocusEnabled(false);
        panelCentral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelCentralMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelCentralLayout = new javax.swing.GroupLayout(panelCentral);
        panelCentral.setLayout(panelCentralLayout);
        panelCentralLayout.setHorizontalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
        );
        panelCentralLayout.setVerticalGroup(
            panelCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );

        barBtnes.setPreferredSize(new java.awt.Dimension(575, 26));

        BtnNuevo.setFont(new java.awt.Font("Arial", 0, 11));
        BtnNuevo.setActionCommand("jButton1");
        BtnNuevo.setLabel("Nuevo");

        BtnResolver.setFont(new java.awt.Font("Arial", 0, 11));
        BtnResolver.setLabel("Resolver");
        BtnResolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnResolverActionPerformed(evt);
            }
        });

        BtnAnterior.setFont(new java.awt.Font("Arial", 0, 11));
        BtnAnterior.setLabel("Anterior");

        BtnSgte.setFont(new java.awt.Font("Arial", 0, 11));
        BtnSgte.setLabel("Siguiente");

        BtnVistaPrevia.setFont(new java.awt.Font("Arial", 0, 11));
        BtnVistaPrevia.setText("Vista Previa");
        BtnVistaPrevia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVistaPreviaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout barBtnesLayout = new javax.swing.GroupLayout(barBtnes);
        barBtnes.setLayout(barBtnesLayout);
        barBtnesLayout.setHorizontalGroup(
            barBtnesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(barBtnesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BtnVistaPrevia)
                .addGap(16, 16, 16)
                .addComponent(BtnNuevo)
                .addGap(23, 23, 23)
                .addComponent(BtnResolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(BtnAnterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtnSgte)
                .addGap(55, 55, 55))
        );
        barBtnesLayout.setVerticalGroup(
            barBtnesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, barBtnesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(barBtnesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSgte)
                    .addComponent(BtnAnterior)
                    .addComponent(BtnResolver)
                    .addComponent(BtnNuevo)
                    .addComponent(BtnVistaPrevia))
                .addContainerGap())
        );

        javax.swing.GroupLayout tableroLayout = new javax.swing.GroupLayout(tablero);
        tablero.setLayout(tableroLayout);
        tableroLayout.setHorizontalGroup(
            tableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
            .addComponent(barBtnes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
        );
        tableroLayout.setVerticalGroup(
            tableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableroLayout.createSequentialGroup()
                .addComponent(panelCentral, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barBtnes, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        barPestanas.addTab("Tablero", tablero);

        jTextDimension.setText("3");

        jLabel1.setText("Dimensión");

        jCheckCuadricula.setText("Cuadrícula");

        javax.swing.GroupLayout configuracionLayout = new javax.swing.GroupLayout(configuracion);
        configuracion.setLayout(configuracionLayout);
        configuracionLayout.setHorizontalGroup(
            configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracionLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addGroup(configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckCuadricula)
                    .addComponent(jTextDimension, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(403, Short.MAX_VALUE))
        );
        configuracionLayout.setVerticalGroup(
            configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configuracionLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(configuracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextDimension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckCuadricula)
                .addContainerGap(509, Short.MAX_VALUE))
        );

        barPestanas.addTab("Configuración", configuracion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(barPestanas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barPestanas, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        barPestanas.getAccessibleContext().setAccessibleName("Tablero");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnResolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnResolverActionPerformed
        this.tablero.repaint();
        
        //System.out.println(this.panelCentral.getComponents().length);
    }//GEN-LAST:event_BtnResolverActionPerformed

    private void BtnVistaPreviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVistaPreviaActionPerformed
        this.nuevaVista();
        for (java.awt.Component pan : this.panelCentral.getComponents()) {
            pan.validate();
            pan.repaint();
        }

        new Thread(new Runnable() {
                public void run() {
                    try{
                        Thread.currentThread().sleep(dimension*10+200);
                    } catch(Exception e){
                        System.out.println(e.getMessage());
                    }
                    panelCentral.repaint();
                }
        }).start();
    }//GEN-LAST:event_BtnVistaPreviaActionPerformed

    private void panelCentralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelCentralMouseClicked
        //System.out.println("hasta aqui");
        ImagePanel button = (ImagePanel) panelCentral.getComponentAt(evt.getPoint());
        Dimension size = button.getSize();
        System.out.println("hasta aqui");
        
        int labelX = hole.getX();
        int labelY = hole.getY();
        int buttonX = button.getX();
        int buttonY = button.getY();
        int buttonPosX = buttonX / size.width;
        int buttonPosY = buttonY / size.height;
        int buttonIndex = pos[buttonPosY][buttonPosX];

        if (labelX == buttonX && (labelY - buttonY) == size.height ) {

             int labelIndex = buttonIndex + 3;

             panelCentral.remove(buttonIndex);
             panelCentral.add(label, buttonIndex);
             panelCentral.add(button,labelIndex);
             panelCentral.validate();
        }

        if (labelX == buttonX && (labelY - buttonY) == -size.height ) {

             int labelIndex = buttonIndex - 3;
             panelCentral.remove(labelIndex);
             panelCentral.add(button,labelIndex);
             panelCentral.add(label, buttonIndex);
             panelCentral.validate();
        }

        if (labelY == buttonY && (labelX - buttonX) == size.width ) {

             int labelIndex = buttonIndex + 1;

             panelCentral.remove(buttonIndex);
             panelCentral.add(label, buttonIndex);
             panelCentral.add(button,labelIndex);
             panelCentral.validate();
        }

        if (labelY == buttonY && (labelX - buttonX) == -size.width ) {

             int labelIndex = buttonIndex - 1;

             panelCentral.remove(buttonIndex);
             panelCentral.add(label, labelIndex);
             panelCentral.add(button,labelIndex);
             panelCentral.validate();
        }
    }//GEN-LAST:event_panelCentralMouseClicked
    public void nuevaVista(){
        //System.out.println(getDimension());
        dimension = getDimension();
        if (dimension == 0){
            return;
        }
        pos = new int[dimension][dimension];
        for (int i = 0; i<dimension*dimension; i++){
            pos[i/dimension][i%dimension]=i;
        }
        cuadro = width/dimension;
        leftOut = (width%dimension)>3;
        cuadricula = getCuadricula();
        panelCentral.removeAll();
        for ( int i = 0; i < dimension; i++) {
            for ( int j = 0; j < dimension; j++) {
                if ( j == dimension-1 && i == dimension-1) {
                    label = new JLabel("");
                    hole = new ImagePanel(j, i, dimension);
                    panelCentral.add(hole);
                    panelCentral.add(label);
                } else {
                    panel = new ImagePanel(j, i, dimension);
                    //panel.setDoubleBuffered(true);
                    panel.setVisible(true);
                    panelCentral.add(panel);
                    //panel.validate();
                    //panel.repaint();
                }
            }
        }
    }
    public class ImagePanel extends JPanel{
        private Image image;
        private int dimension;

        public ImagePanel(int x, int y, int n) {
            dimension = n;
            try {
                if(x==dimension-1&&y==dimension-1){
                    if (cuadricula){
                        image = createImage(new FilteredImageSource(blank.getSource(),
                            new CropImageFilter(x*cuadro, y*cuadro, cuadro-1, cuadro-1)));
                    } else{
                        image = createImage(new FilteredImageSource(blank.getSource(),
                            new CropImageFilter(x*cuadro, y*cuadro, cuadro, cuadro)));
                    }
                    //System.out.println("hasta");
                } else if(cuadricula){
                    image = createImage(new FilteredImageSource(source.getSource(),
                            new CropImageFilter(x*cuadro, y*cuadro, cuadro-1, cuadro-1)));
                } else{
                    image = createImage(new FilteredImageSource(source.getSource(),
                            new CropImageFilter(x*cuadro, y*cuadro, cuadro, cuadro)));
                }

                this.setSize(new Dimension(cuadro, cuadro));
                this.setMinimumSize(new Dimension(cuadro, cuadro));
                this.setPreferredSize(new Dimension(cuadro, cuadro));
                if(leftOut){
                    int correc;
                    correc = (width%dimension)/2;
                    this.setLocation((x*cuadro)+correc, (y*cuadro));
                } else{
                    this.setLocation((x*(cuadro)), (y*(cuadro)));
                }
                /*if (x>0){
                    if(y>0){
                        this.setLocation((x*(cuadro)), (y*(cuadro)));
                    } else {
                        this.setLocation((x*cuadro), (y*cuadro));
                    }
                } else {
                    if(y>0){
                        this.setLocation((x*cuadro), (y*cuadro));
                    }else {
                        this.setLocation((x*cuadro), (y*cuadro));
                    }
                }*/
                
            } catch (Exception ex) {
                ex.getMessage();
            }    
        }
        public void changeImage(int x, int y){
            try{
                image = createImage(new FilteredImageSource(source.getSource(),
                            new CropImageFilter(x*(width/dimension), y*(height/dimension), (width/dimension), (height/dimension))));
            } catch(Exception e){
                System.out.println(e.getMessage());
            }
        }

        @Override
        public void paintComponent(Graphics g) {
            g.drawImage(image, 0, 0, null); // see javadoc for more info on the parameters

        }

    }
    //se debe controlar que sea un entero
    //hace falta algún tipo de manejo de excepciones
    public int getDimension(){
        int dim = 0;
        try{
            dim = Integer.parseInt(jTextDimension.getText());
            
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, "La dimensión debe ser un número entero");
            try{
                this.barPestanas.setSelectedComponent(configuracion);
            } catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
        return dim;
    }
    public boolean getCuadricula(){
        return this.jCheckCuadricula.isSelected();
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               NpuzzleGUI juego = new NpuzzleGUI();
               juego.setVisible(true); 
               juego.panelCentral.repaint();
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAnterior;
    private javax.swing.JButton BtnNuevo;
    private javax.swing.JButton BtnResolver;
    private javax.swing.JButton BtnSgte;
    private javax.swing.JButton BtnVistaPrevia;
    private javax.swing.JPanel barBtnes;
    private javax.swing.JTabbedPane barPestanas;
    private javax.swing.JPanel configuracion;
    private javax.swing.JCheckBox jCheckCuadricula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextDimension;
    public javax.swing.JPanel panelCentral;
    private javax.swing.JPanel tablero;
    // End of variables declaration//GEN-END:variables
    
}
